load()
{
	//辞書読み込み
	_script_load("shiori-event\event");
	_script_load("shiori-event\resource");
	_script_load("mahjong\ai");
	_script_load("mahjong\score");
	_script_load("mahjong\shanten");
	_script_load("mahjong\util");

	_saoriload("saori\MahjongUtil\MahjongUtil.dll", "MahjongUtil");
}
unload()
{
	_saoriunload("MahjongUtil");
}
dict dAdditionalHeader;
array _customrequest(dict ref)
{
	dict d = dAdditionalHeader;
	dAdditionalHeader = $();
	array ar;
	// SHIORIに対するリクエストでない場合
	if (_strstr(ref["head"], "SHIORI") == -1) {
		ar	+=	"SHIORI/3.0 400 Bad Request";
		ar	+=	"Sender: akari";
		ar	+=	"Charset: UTF-8";
		ar	+=	"";
		ar	+=	"";
		return ar;
	}
	// セキュリティレベル="External"なら即返る
	if (ref["SecurityLevel"] == "External") {
		ar	+=	"SHIORI/3.0 204 No Content";
		ar	+=	"Sender: akari";
		ar	+=	"Charset: UTF-8";
		ar	+=	"";
		ar	+=	"";
		return ar;
	}
	string s = _eventdict[ref["ID"]];
	if (s == "") s = _fncstr(ref["ID"], ref);
	// NOTIFY
	if (_strstr(ref["head"], "NOTIFY") != -1) {
		ar	+=	"SHIORI/3.0 200 OK";
		ar	+=	"Sender: akari";
		ar	+=	"Charset: UTF-8";
		ar	+=	"";
		ar	+=	"";
		return ar;
	}
	// GET
	if (_strstr(ref["head"], "GET") != -1) {
		if (s == "")
		{
			ar	+=	"SHIORI/3.0 204 No Content";
			ar	+=	"Sender: akari";
			ar	+=	"Charset: UTF-8";
		}
		else
		{
			ar	+=	"SHIORI/3.0 200 OK";
			ar	+=	"Sender: akari";
			ar	+=	"Charset: UTF-8";
			ar	+=	"Value: " + s;
		}
		array arKey = _dickeyget(d);
		for (int i = 0; arKey[i] != nil; i++)
		{
			ar += arKey[i] + ": " + d[arKey[i]];
		}
		ar	+=	"";
		ar	+=	"";
		return ar;
	}
	// 未知のリクエスト
	else {
		ar	+=	"SHIORI/3.0 400 Bad Request";
		ar	+=	"Sender: akari";
		ar	+=	"Charset: UTF-8";
		ar	+=	"";
		ar	+=	"";
		return ar;
	}
}
