//本来は他家の捨て牌とか諸々の情報が必要
//今はシステムの都合上、七対子をひたすら目指す
string naniwokiru(array hai, array kawa)
{
	array hai14 = sortHai(hai);
	//3枚同じ牌があれば切る
	string dahai = get3SameElement(hai14);
	if (dahai != "")
		return dahai;
	//過去に切った牌をツモ切り フリテン防止(配列の最後の要素がツモである前提のため注意)
	dahai = hai[_aryvn(hai)-1];
	if (existElement(kawa, dahai))
		return dahai;
	//1枚のみの牌を切る
	dahai = getSoloElement(shuffleArray(hai14));//ランダム性が無いと待ちが字牌に偏る
	if (dahai != "")
		return dahai;
	else
		return "";//それは和了である
}

int existElement(array a, string e)
{
	for (int i = 0; a[i] != nil; i++)
	{
		if (a[i] == e)
			return 1;
	}
	return 0;
}

string get3SameElement(array elements)
{
	string e = elements[0];
	for (int i = 1; elements[i + 1] != nil; i++)
	{
		if (e == elements[i] && e == elements[i + 1])
		{
			return e;
		}
		else
		{
			e = elements[i];
		}
	}
	return "";
}

string getSoloElement(array elements)
{
	dict solo;
	for (int i = 0; elements[i] != nil; i++)
	{
		if (solo[elements[i]] == nil)
		{
			int isSolo = 1;
			for (int j = i + 1; elements[j] != nil; j++)
			{
				if (elements[i] == elements[j])
				{
					isSolo = 0;
					solo += $(elements[i], 0);
					break;
				}
			}
			if (isSolo)
			{
				return elements[i];
			}
		}
	}
	return "";
}
